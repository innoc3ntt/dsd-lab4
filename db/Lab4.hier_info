|counter_8_bit
en => t[1].IN1
en => t_flip_flop:ff0.T
clk => t_flip_flop:ff0.clk
clk => t_flip_flop:ff1.clk
clr => t_flip_flop:ff0.CLR
clr => t_flip_flop:ff1.CLR
q_out[0] <= t_flip_flop:ff0.Q
q_out[1] <= t_flip_flop:ff1.Q
q_out[2] <= <GND>
q_out[3] <= <GND>
q_out[4] <= <GND>
q_out[5] <= <GND>
q_out[6] <= <GND>
q_out[7] <= <GND>
HEX1[0] <= Wk3_7segment_decoder:seg1.HEX0[0]
HEX1[1] <= Wk3_7segment_decoder:seg1.HEX0[1]
HEX1[2] <= Wk3_7segment_decoder:seg1.HEX0[2]
HEX1[3] <= Wk3_7segment_decoder:seg1.HEX0[3]
HEX1[4] <= Wk3_7segment_decoder:seg1.HEX0[4]
HEX1[5] <= Wk3_7segment_decoder:seg1.HEX0[5]
HEX1[6] <= Wk3_7segment_decoder:seg1.HEX0[6]
HEX2[0] <= Wk3_7segment_decoder:seg2.HEX0[0]
HEX2[1] <= Wk3_7segment_decoder:seg2.HEX0[1]
HEX2[2] <= Wk3_7segment_decoder:seg2.HEX0[2]
HEX2[3] <= Wk3_7segment_decoder:seg2.HEX0[3]
HEX2[4] <= Wk3_7segment_decoder:seg2.HEX0[4]
HEX2[5] <= Wk3_7segment_decoder:seg2.HEX0[5]
HEX2[6] <= Wk3_7segment_decoder:seg2.HEX0[6]


|counter_8_bit|t_flip_flop:ff0
clk => q_out.CLK
T => next_q.OUTPUTSELECT
T => q_out.ENA
CLR => q_out.ACLR
Q <= q_out.DB_MAX_OUTPUT_PORT_TYPE
Q_inv <= comb.DB_MAX_OUTPUT_PORT_TYPE


|counter_8_bit|t_flip_flop:ff1
clk => q_out.CLK
T => next_q.OUTPUTSELECT
T => q_out.ENA
CLR => q_out.ACLR
Q <= q_out.DB_MAX_OUTPUT_PORT_TYPE
Q_inv <= comb.DB_MAX_OUTPUT_PORT_TYPE


|counter_8_bit|Wk3_7segment_decoder:seg1
SW[0] => Mux0.IN19
SW[0] => Mux1.IN19
SW[0] => Mux2.IN19
SW[0] => Mux3.IN19
SW[0] => Mux4.IN19
SW[0] => Mux5.IN19
SW[0] => Mux6.IN19
SW[0] => LEDR[0].DATAIN
SW[1] => Mux0.IN18
SW[1] => Mux1.IN18
SW[1] => Mux2.IN18
SW[1] => Mux3.IN18
SW[1] => Mux4.IN18
SW[1] => Mux5.IN18
SW[1] => Mux6.IN18
SW[1] => LEDR[1].DATAIN
SW[2] => Mux0.IN17
SW[2] => Mux1.IN17
SW[2] => Mux2.IN17
SW[2] => Mux3.IN17
SW[2] => Mux4.IN17
SW[2] => Mux5.IN17
SW[2] => Mux6.IN17
SW[2] => LEDR[2].DATAIN
SW[3] => Mux0.IN16
SW[3] => Mux1.IN16
SW[3] => Mux2.IN16
SW[3] => Mux3.IN16
SW[3] => Mux4.IN16
SW[3] => Mux5.IN16
SW[3] => Mux6.IN16
SW[3] => LEDR[3].DATAIN
LEDR[0] <= SW[0].DB_MAX_OUTPUT_PORT_TYPE
LEDR[1] <= SW[1].DB_MAX_OUTPUT_PORT_TYPE
LEDR[2] <= SW[2].DB_MAX_OUTPUT_PORT_TYPE
LEDR[3] <= SW[3].DB_MAX_OUTPUT_PORT_TYPE
HEX0[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
HEX0[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
HEX0[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
HEX0[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
HEX0[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
HEX0[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
HEX0[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|counter_8_bit|Wk3_7segment_decoder:seg2
SW[0] => Mux0.IN19
SW[0] => Mux1.IN19
SW[0] => Mux2.IN19
SW[0] => Mux3.IN19
SW[0] => Mux4.IN19
SW[0] => Mux5.IN19
SW[0] => Mux6.IN19
SW[0] => LEDR[0].DATAIN
SW[1] => Mux0.IN18
SW[1] => Mux1.IN18
SW[1] => Mux2.IN18
SW[1] => Mux3.IN18
SW[1] => Mux4.IN18
SW[1] => Mux5.IN18
SW[1] => Mux6.IN18
SW[1] => LEDR[1].DATAIN
SW[2] => Mux0.IN17
SW[2] => Mux1.IN17
SW[2] => Mux2.IN17
SW[2] => Mux3.IN17
SW[2] => Mux4.IN17
SW[2] => Mux5.IN17
SW[2] => Mux6.IN17
SW[2] => LEDR[2].DATAIN
SW[3] => Mux0.IN16
SW[3] => Mux1.IN16
SW[3] => Mux2.IN16
SW[3] => Mux3.IN16
SW[3] => Mux4.IN16
SW[3] => Mux5.IN16
SW[3] => Mux6.IN16
SW[3] => LEDR[3].DATAIN
LEDR[0] <= SW[0].DB_MAX_OUTPUT_PORT_TYPE
LEDR[1] <= SW[1].DB_MAX_OUTPUT_PORT_TYPE
LEDR[2] <= SW[2].DB_MAX_OUTPUT_PORT_TYPE
LEDR[3] <= SW[3].DB_MAX_OUTPUT_PORT_TYPE
HEX0[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
HEX0[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
HEX0[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
HEX0[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
HEX0[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
HEX0[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
HEX0[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


